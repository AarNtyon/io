1:HL["/_next/static/css/44066e213c3d756e.css",{"as":"style"}]
0:[[["",{"children":["post",{"children":[["slug","react-unocss","d"],{"children":["__PAGE__?{\"slug\":\"react-unocss\"}",{}]}]}]},"$undefined","$undefined",true],"$L2",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/44066e213c3d756e.css","precedence":"next"}]],["$L3",null]]]]
4:HL["/_next/static/css/5046688ea5e44c5b.css",{"as":"style"}]
5:I{"id":"8920","chunks":["920:static/chunks/920-2fb459665447a51a.js","605:static/chunks/app/post/[slug]/page-7850bc001eeba8e4.js"],"name":"","async":false}
6:"$Sreact.suspense"
7:I{"id":"7069","chunks":["920:static/chunks/920-2fb459665447a51a.js","185:static/chunks/app/layout-0242019b35d4f584.js"],"name":"NoSSR","async":false}
8:I{"id":"5554","chunks":["920:static/chunks/920-2fb459665447a51a.js","185:static/chunks/app/layout-0242019b35d4f584.js"],"name":"","async":false}
9:I{"id":"4463","chunks":["272:static/chunks/webpack-66e25ca2f8102150.js","667:static/chunks/2443530c-824e93370d7398c3.js","488:static/chunks/488-e1ddd61bb847c097.js"],"name":"","async":false}
a:I{"id":"1010","chunks":["272:static/chunks/webpack-66e25ca2f8102150.js","667:static/chunks/2443530c-824e93370d7398c3.js","488:static/chunks/488-e1ddd61bb847c097.js"],"name":"","async":false}
c:I{"id":"2263","chunks":["920:static/chunks/920-2fb459665447a51a.js","185:static/chunks/app/layout-0242019b35d4f584.js"],"name":"","async":false}
2:[["$","html",null,{"lang":"en","children":[["$","link",null,{"rel":"rainc.io","href":"/favicon.ico"}],["$","body",null,{"children":["$","div",null,{"id":"__next","children":["$","div",null,{"id":"app","className":"flex h-100% flex-col","children":[["$","header",null,{"className":"flex justify-between w-68% h-66px m-auto items-center xs:w-100% p-l-80px p-r-80px xs:p-l-30px xs:p-r-30px shrink-0","children":[["$","$L5",null,{"className":"text-20px cursor-pointer font-bold font-mono dark:color-white ","href":"/","children":["$","span",null,{"children":"Rain's Blog"}]}],["$","nav",null,{"className":"flex items-center column-50px","children":[["$","nav",null,{"className":"text-right opacity-[0.6] text-[16px] dark:color-#e5e7eb flex","children":[["$","$L5",null,{"className":"mr-20px","href":"/post","children":[["$","span",null,{"className":"xs:hidden md:block","children":"博客"}],["$","i",null,{"className":"xs:block  md:hidden dark:color-#fff i-carbon-align-box-top-left"}]]}],["$","$L5",null,{"className":"mr-20px","href":"/moment","children":[["$","span",null,{"className":"xs:hidden md:block","children":"随笔"}],["$","i",null,{"className":"xs:block  md:hidden dark:color-#fff i-carbon-bookmark-add"}]]}],["$","$L5",null,{"className":"mr-20px","href":"/about","children":[["$","span",null,{"className":"xs:hidden md:block","children":"关于"}],["$","i",null,{"className":"xs:block  md:hidden dark:color-#fff i-carbon-sprout"}]]}]]}],["$","$6",null,{"fallback":null,"children":["$","$L7",null,{"children":["$","$L8",null,{}]}]}]]}]]}],["$","main",null,{"className":"font-sans flex-auto","children":["$","$L9",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$La",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L9",null,{"parallelRouterKey":"children","segmentPath":["children","post","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$La",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L9",null,{"parallelRouterKey":"children","segmentPath":["children","post","children",["slug","react-unocss","d"],"children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$La",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$Lb",null],"segment":"__PAGE__?{\"slug\":\"react-unocss\"}"},"styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/5046688ea5e44c5b.css","precedence":"next"}]]}],"segment":["slug","react-unocss","d"]},"styles":[]}],"segment":"post"},"styles":[]}]}],["$","footer",null,{"className":"dark:color-white text-center h-66px leading-[66px]","children":["© ",2023,", Rain | Powered by Next.js"]}],["$","$6",null,{"fallback":null,"children":["$","$L7",null,{"children":["$","$Lc",null,{}]}]}]]}]}]}]]}],null]
3:[[["$","meta",null,{"charSet":"utf-8"}],["$","title",null,{"children":"react+unocss实现多端的rem适配"}],["$","meta",null,{"name":"description","content":"learn more thing"}],null,null,null,null,null,null,null,null,["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1"}],null,null,null,null,null,null,null,null,null,null,[]],[null,null,null,null],null,null,[null,null,null,null,null],null,null,null,null,[null,[["$","link",null,{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"any"}]],[],null]]
b:"$Ld"
d:["$","div",null,{"className":"prose w-60% m-auto m-b-50px xs:w-90% m-t-66px","children":[["$","div",null,{"className":"m-b-30px","children":["$","div",null,{"children":[["$","h1",null,{"children":"react+unocss实现多端的rem适配"}],["$","p",null,{"className":"flex justify-between","children":[["$","span",null,{"className":"color-gray","children":["Rain, ","Wed  Oct  11  2023"]}],["$","$L5",null,{"className":"cursor-pointer color-gray","href":"/post","children":"back"}]]}]]}]}],["$","article",null,{"className":"prose","dangerouslySetInnerHTML":{"__html":"<p>在taro中有关设计稿及尺寸单位中有这样一段话</p>\n<blockquote>\n<p>在 Taro 中书写尺寸按照 1:1 的关系来进行书写，即从设计稿上量的长度 100px，那么尺寸书写就是 100px，当转成微信小程序的时候，尺寸将默认转换为 100rpx，当转成 H5 时将默认转换为以 rem 为单位的值。</p>\n</blockquote>\n<p>本文会在这段话的基础上带你实现react+unocss的rem适配，则pc中正常使用固定单位，而在移动端中，设计稿的尺寸是多少，移动端开发中的尺寸就写入多少，通过改动配置去实现移动端的不同屏幕的等比例缩放。</p>\n<h3>传统开发</h3>\n<p>如何让一个项目同时支持pc端和移动端，在以往的开发中有多种实现方式。</p>\n<p>1.项目分离\n即pc端一套代码，移动端一套代码，外接一个启动页，当用户去访问网址的时候，判断用户当前的访问设备和尺寸，根据这些参数去重定向对应的网站。比如 <strong>https://xxx.com/pc</strong> 和 <strong>https://xxx.com/phone</strong>。这种方式利弊分明。\n好处是代码分离，结构清晰明了，维护起来不复杂。坏处则是大部分的ui代码效果不一致，而他们的业务逻辑是差不多是相同的，当业务发生变动的时候，一样的代码需要在分离的两套代码中书写两次。</p>\n<p>2.项目不分离\n在单页面应用中，对相似度特别接近的组件只需要根据媒体查询稍微改下样式即可，没有相似度的组件则需要重写一套，然后根据尺寸去展示对应的组件。相较于第一种方式来说，在代码层面会增加较多的文件，可以看做把pc和移动端的代码都合并在一个项目了，但业务逻辑相关的代码不会有太大的改动。</p>\n<pre class=\"pre-dark\"><code><span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">Index</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> () </span><span style=\"color: #C678DD\">=&gt;</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> {</span><span style=\"color: #E5C07B\">isPhone</span><span style=\"color: #ABB2BF\">} </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">useMediaScreen</span><span style=\"color: #ABB2BF\">()</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">isPhone</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">?</span><span style=\"color: #ABB2BF\"> &lt;</span><span style=\"color: #E5C07B\">Phone</span><span style=\"color: #ABB2BF\"> /&gt; </span><span style=\"color: #C678DD\">:</span><span style=\"color: #ABB2BF\"> &lt;</span><span style=\"color: #E5C07B\">Pc</span><span style=\"color: #ABB2BF\"> /&gt;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<h3>rem适配方案</h3>\n<p>在pc端开发中，设计稿的元素尺寸是多少，那么开发中书写的尺寸就是多少，这个没有太大的问题。而在移动端中却不能这么做，一个长宽为100px的div在宽度为375px的设备和在一个宽度为320px的设备看起来的效果是完全不一样的，前者看起来正常，后者看起来就会有一种被放大，突兀的感觉。</p>\n<p>移动端rem适配是目前比较常用的方案，通过在根标签设置字体大小作为基准值，当移动端页面尺寸发生变化的时候动态改变这一个值，在页面元素中根据基准值转换到正确的rem大小进行设置，达到等比例的缩放效果。\n通过监听页面尺寸变化，动态改变根字体大小，这样就实现了rem适配</p>\n<pre class=\"pre-dark\"><code><span class=\"line\"><span style=\"color: #E06C75\">html</span><span style=\"color: #ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  font-size:</span><span style=\"color: #D19A66\">20</span><span style=\"color: #E06C75\">px</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E06C75\">div</span><span style=\"color: #ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  width:</span><span style=\"color: #98C379\">&#39;100px&#39;</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  height:</span><span style=\"color: #98C379\">&#39;100px&#39;</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">/* 将上面的尺寸转化为rem */</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">div</span><span style=\"color: #ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  width:</span><span style=\"color: #D19A66\">5</span><span style=\"color: #E06C75\">rem</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  height:</span><span style=\"color: #D19A66\">5</span><span style=\"color: #E06C75\">rem</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<p>不过上面的写法也是很不方面，就是每次写尺寸的时候都需要手动去换算一遍rem，这里可以通过 <code>px2rem</code> 插件去转换。</p>\n<h3>rem进阶版</h3>\n<p>接入unocss如何实现跟上面第二种方案一致的效果呢。</p>\n<p>当直接设置尺寸单位，如 <strong>w-20px</strong>,会被编译为 <strong>width:20px</strong>，而不加单位 <strong>w-20</strong> 就会被转化为 <strong>width:5rem</strong>，</p>\n<p>适配不同的屏幕尺寸，改变不同屏幕尺寸的根字体大小，可以得到对应屏幕的基准值</p>\n<pre class=\"pre-dark\"><code><span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #C678DD\">function</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">resizeRem</span><span style=\"color: #ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">let</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">docDocument</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">document</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">documentElement</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">let</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">docWidth</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">docDocument</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">clientWidth</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #E06C75\">docWidth</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">&lt;=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">768</span><span style=\"color: #ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E5C07B\">docDocument</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">style</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">fontSize</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">docWidth</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">/</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">10</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">+</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #98C379\">&#39;px&#39;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    } </span><span style=\"color: #C678DD\">else</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E5C07B\">docDocument</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">style</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">fontSize</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #98C379\">&#39;&#39;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #61AFEF\">resizeRem</span><span style=\"color: #ABB2BF\">()</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E5C07B\">window</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">addEventListener</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">&#39;resize&#39;</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #61AFEF\">debounce</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75\">resizeRem</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">), </span><span style=\"color: #D19A66\">false</span><span style=\"color: #ABB2BF\">)</span></span>\n<span class=\"line\"></span></code></pre>\n<p>当宽度等于375的时候，根字体的大小为37.5rem，由于unocss的基准值默认是4px = 1rem，且没有修改的办法，所以这里可以从另外一个方面入手，将编译后有关尺寸的数值进行计算，就可以得到对应的参数</p>\n<pre class=\"pre-dark\"><code><span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #ABB2BF\"> { </span><span style=\"color: #E06C75\">defineConfig</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E06C75\">presetAttributify</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E06C75\">presetUno</span><span style=\"color: #ABB2BF\"> } </span><span style=\"color: #C678DD\">from</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #98C379\">&#39;unocss&#39;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">remRE</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #E06C75\"> /(-</span><span style=\"color: #D19A66\">?[</span><span style=\"color: #56B6C2\">\\.</span><span style=\"color: #E06C75\">\\d</span><span style=\"color: #D19A66\">]+</span><span style=\"color: #E06C75\">)rem/</span><span style=\"color: #C678DD\">g</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">rootFontSize</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">37.5</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">unoDefaultFontSize</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">4</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">export</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">default</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">defineConfig</span><span style=\"color: #ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">presets</span><span style=\"color: #ABB2BF\">: [</span><span style=\"color: #61AFEF\">presetUno</span><span style=\"color: #ABB2BF\">(), </span><span style=\"color: #61AFEF\">presetAttributify</span><span style=\"color: #ABB2BF\">()],</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">postprocess</span><span style=\"color: #ABB2BF\">: [</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75; font-style: italic\">util</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">=&gt;</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E5C07B\">util</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">entries</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">forEach</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75; font-style: italic\">entry</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">=&gt;</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">value</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">entry</span><span style=\"color: #ABB2BF\">[</span><span style=\"color: #D19A66\">1</span><span style=\"color: #ABB2BF\">]</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #E06C75\">value</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">&amp;&amp;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">typeof</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">value</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">===</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #98C379\">&#39;string&#39;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">&amp;&amp;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">remRE</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">test</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75\">value</span><span style=\"color: #ABB2BF\">))</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">          </span><span style=\"color: #E06C75\">entry</span><span style=\"color: #ABB2BF\">[</span><span style=\"color: #D19A66\">1</span><span style=\"color: #ABB2BF\">] </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">value</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">replace</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75\">remRE</span><span style=\"color: #ABB2BF\">, (</span><span style=\"color: #E06C75; font-style: italic\">_</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E06C75; font-style: italic\">p1</span><span style=\"color: #ABB2BF\">) </span><span style=\"color: #C678DD\">=&gt;</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #7F848E; font-style: italic\">// 假如使用text-12，那么这里拿到的p1就等于3</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #7F848E; font-style: italic\">// p1由默认的rem基准值4转化而来,如 12px = 3rem,由此可得出倍率4</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #7F848E; font-style: italic\">// 由于项目一开始设置的rem基准值是37.5,那么想要uno接管这个基准值，公式应该是 37.5 / 4</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">computeRem</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">rootFontSize</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">/</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">unoDefaultFontSize</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #98C379\">`</span><span style=\"color: #C678DD\">${</span><span style=\"color: #E06C75\">p1</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">/</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">computeRem</span><span style=\"color: #C678DD\">}</span><span style=\"color: #98C379\">rem`</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">          })</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      })</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    },</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  ],</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">})</span></span>\n<span class=\"line\"></span></code></pre>\n<p>最后用一个header组件来展示效果，</p>\n<p>pc设计稿为1920px，header宽度100%，高度80px</p>\n<pre class=\"pre-dark\"><code><span class=\"line\"><span style=\"color: #ABB2BF\">&lt;</span><span style=\"color: #E06C75\">header</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">class</span><span style=\"color: #ABB2BF\">=</span><span style=\"color: #98C379\">&quot;w-100% h-80px&quot;</span><span style=\"color: #ABB2BF\">&gt;&lt;/</span><span style=\"color: #E06C75\">header</span><span style=\"color: #ABB2BF\">&gt;</span></span>\n<span class=\"line\"></span></code></pre>\n<p>移动端设计稿为375px,header宽度100%，高度56px</p>\n<pre class=\"pre-dark\"><code><span class=\"line\"><span style=\"color: #ABB2BF\">&lt;</span><span style=\"color: #E06C75\">header</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">class</span><span style=\"color: #ABB2BF\">=</span><span style=\"color: #98C379\">&quot;w-100% h-56&quot;</span><span style=\"color: #ABB2BF\">&gt;&lt;/</span><span style=\"color: #E06C75\">header</span><span style=\"color: #ABB2BF\">&gt;</span></span>\n<span class=\"line\"></span></code></pre>\n<p>此时基准值不再是unocss默认的4px=1rem，而是 <strong>unocss默认基准值 / (37.5 / 4)</strong></p>\n<p>拿56为例，默认基准值为 <code>(56 / 4) / (37.5 / 4) =  1.4933333333333334</code></p>\n<p>此时根字体37.5px = 1rem，56px 就等于 1.4933333333333334rem</p>\n"}}]]}]
