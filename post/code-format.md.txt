1:HL["/_next/static/css/13eb794b8a62af15.css",{"as":"style"}]
0:[[["",{"children":["post",{"children":[["slug","code-format.md","d"],{"children":["__PAGE__?{\"slug\":\"code-format.md\"}",{}]}]}]},"$undefined","$undefined",true],"$L2",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/13eb794b8a62af15.css","precedence":"next"}]],["$L3",null]]]]
4:HL["/_next/static/css/4ac712d9614e435b.css",{"as":"style"}]
5:I{"id":"8920","chunks":["920:static/chunks/920-2fb459665447a51a.js","297:static/chunks/app/post/page-56c3a9ee63a6f83d.js"],"name":"","async":false}
6:"$Sreact.suspense"
7:I{"id":"7069","chunks":["920:static/chunks/920-2fb459665447a51a.js","185:static/chunks/app/layout-55cc4b2aa83c9cb5.js"],"name":"NoSSR","async":false}
8:I{"id":"5554","chunks":["920:static/chunks/920-2fb459665447a51a.js","185:static/chunks/app/layout-55cc4b2aa83c9cb5.js"],"name":"","async":false}
9:I{"id":"4463","chunks":["272:static/chunks/webpack-fd8259f661961224.js","667:static/chunks/2443530c-824e93370d7398c3.js","488:static/chunks/488-e1ddd61bb847c097.js"],"name":"","async":false}
a:I{"id":"1010","chunks":["272:static/chunks/webpack-fd8259f661961224.js","667:static/chunks/2443530c-824e93370d7398c3.js","488:static/chunks/488-e1ddd61bb847c097.js"],"name":"","async":false}
c:I{"id":"2263","chunks":["920:static/chunks/920-2fb459665447a51a.js","185:static/chunks/app/layout-55cc4b2aa83c9cb5.js"],"name":"","async":false}
2:[["$","html",null,{"lang":"en","children":["$","body",null,{"children":["$","div",null,{"id":"__next","children":["$","div",null,{"id":"app","className":"flex h-100% flex-col","children":[["$","header",null,{"className":"flex justify-between  w-68% h-66px m-auto items-center xs:w-100% p-l-80px p-r-80px xs:p-l-20px xs:p-r-20px shrink-0","children":[["$","$L5",null,{"className":"text-20px cursor-pointer font-bold font-mono dark:color-white hover:color-#1e90ff","href":"/","children":["$","span",null,{"children":"Rain's Blog"}]}],["$","nav",null,{"className":"flex items-center column-50px","children":[["$","nav",null,{"className":"text-right opacity-[0.6] text-[16px] dark:color-#e5e7eb flex","children":[["$","$L5",null,{"className":"mr-20px","href":"/post","children":[["$","span",null,{"className":"xs:hidden md:block","children":"文章"}],["$","i",null,{"className":"xs:block  md:hidden dark:color-#fff i-carbon-align-box-top-left"}]]}],["$","$L5",null,{"className":"mr-20px","href":"/tags","children":[["$","span",null,{"className":"xs:hidden md:block","children":"标签"}],["$","i",null,{"className":"xs:block  md:hidden dark:color-#fff i-carbon-bookmark-add"}]]}],["$","$L5",null,{"className":"mr-20px","href":"/about","children":[["$","span",null,{"className":"xs:hidden md:block","children":"关于"}],["$","i",null,{"className":"xs:block  md:hidden dark:color-#fff i-carbon-sprout"}]]}]]}],["$","$6",null,{"fallback":null,"children":["$","$L7",null,{"children":["$","$L8",null,{}]}]}]]}]]}],["$","main",null,{"className":"font-sans flex-auto","children":["$","$L9",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$La",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L9",null,{"parallelRouterKey":"children","segmentPath":["children","post","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$La",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L9",null,{"parallelRouterKey":"children","segmentPath":["children","post","children",["slug","code-format.md","d"],"children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$La",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$Lb",null],"segment":"__PAGE__?{\"slug\":\"code-format.md\"}"},"styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/4ac712d9614e435b.css","precedence":"next"}]]}],"segment":["slug","code-format.md","d"]},"styles":[]}],"segment":"post"},"styles":[]}]}],["$","footer",null,{"className":"dark:color-white text-center h-66px leading-[66px]","children":["© ",2023,", Rain | Powered by Next.js"]}],["$","$6",null,{"fallback":null,"children":["$","$L7",null,{"children":["$","$Lc",null,{}]}]}]]}]}]}]}],null]
3:[[["$","meta",null,{"charSet":"utf-8"}],["$","title",null,{"children":"Rain's Blog"}],["$","meta",null,{"name":"description","content":"Generated by create next app"}],null,null,null,null,null,null,null,null,["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1"}],null,null,null,null,null,null,null,null,null,null,[]],[null,null,null,null],null,null,[null,null,null,null,null],null,null,null,null,[null,[["$","link",null,{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"any"}]],[],null]]
b:"$Ld"
d:["$","div",null,{"className":"prose w-60% m-auto m-b-50px xs:w-90% m-t-66px","children":[["$","div",null,{"className":"m-b-30px","children":["$","div",null,{"children":[["$","h1",null,{"children":"聊聊代码格式化"}],["$","p",null,{"className":"flex justify-between","children":["$","span",null,{"className":"color-gray","children":["Author: Rain 写于 ","2023-03-24 14:08:25"]}]}]]}]}],["$","article",null,{"className":"prose","dangerouslySetInnerHTML":{"__html":"<h2>Tabs VS Spaces</h2>\n<p>首先，我想谈谈我关于使用 Tab 还是 Space 的考虑。我毫无疑问地支持使用 Tab。</p>\n<p>我的理由是，Tab 能够自由地控制在编辑器中显示的长度；\n同时，显然不是所有人对于空格个数的偏好都一致。\n既然如此，为什么不使用 Tab 缩进，然后将显示缩进宽度的选择权交给每个人呢？\n这样，无论你更喜欢紧凑的代码布局，还是想要增大缩进来尽早发现你代码中的嵌套，都是被允许的。</p>\n<p>当然，不是所有软件都允许你动态的调整 Tab 的长度。\n如果它被固定到你不喜欢的宽度，可能会引起你的不适。\nSpace 则没有这个问题。</p>\n<h2>Prettier</h2>\n<p><a href=\"https://prettier.io\">Prettier</a> 是 Node.js 生态中使用最多的代码格式化工具。\n它可以统一你的代码风格，比如缩进、引号、分号等。</p>\n<p>以下是我所使用的全部有关 Prettier 的内容。</p>\n<h3>设置过程</h3>\n<p>安装为开发依赖</p>\n<pre class=\"pre-dark\" style=\"background:#fafafa\"><code><span class=\"line\"><span style=\"color: #61AFEF\">ni</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">-D</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #98C379\">prettier</span></span>\n<span class=\"line\"></span></code></pre>\n<p>在 <code>package.json</code> 中添加格式化的脚本和配置。</p>\n<pre class=\"pre-dark\" style=\"background:#fafafa\"><code><span class=\"line\"><span style=\"color: #ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">&quot;scripts&quot;</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">&quot;format&quot;</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">&quot;prettier --write .&quot;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">&quot;prettier&quot;</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">&quot;semi&quot;</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #D19A66\">false</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<p>按需创建 <code>.prettierignore</code> 文件，你可以以 <code>.gitignore</code> 为基础。</p>\n<p>安装 <a href=\"https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode\">Prettier VSCode 插件</a>，添加配置到 <code>.vscode/settings.json</code>。\n由于已经配置好 ignore 的规则，我们可以直接设置它为默认格式化器，如有例外的文件类型再自行覆盖。</p>\n<pre class=\"pre-dark\" style=\"background:#fafafa\"><code><span class=\"line\"><span style=\"color: #ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">&quot;editor.defaultFormatter&quot;</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">&quot;esbenp.prettier-vscode&quot;</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">&quot;editor.formatOnSave&quot;</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #D19A66\">true</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<p>如此，当你保存文件时，prettier 就会自动帮你格式化代码。</p>\n<h3>EditorConfig</h3>\n<p><a href=\"https://editorconfig.org\">EditorConfig</a> 是一份通用的编辑器配置规范，很多编辑器和工具都支持它的配置项。\n取决于你自己，可以设置好一份 <code>.editorconfig</code> 文件，它的配置项会被 Prettier 识别。\n安装 <a href=\"https://marketplace.visualstudio.com/items?itemName=EditorConfig.EditorConfig\">EditorConfig VSCode 插件</a> 后，也能按配置调整 vscode 的工作区设置。</p>\n<pre class=\"pre-dark\" style=\"background:#fafafa\"><code><span class=\"line\"><span style=\"color: #61AFEF\">[*]</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">charset</span><span style=\"color: #98C379\"> </span><span style=\"color: #ABB2BF\">=</span><span style=\"color: #98C379\"> utf-8</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">end_of_line</span><span style=\"color: #98C379\"> </span><span style=\"color: #ABB2BF\">=</span><span style=\"color: #98C379\"> lf</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">max_line_length</span><span style=\"color: #98C379\"> </span><span style=\"color: #ABB2BF\">=</span><span style=\"color: #98C379\"> 80</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">indent_style</span><span style=\"color: #98C379\"> </span><span style=\"color: #ABB2BF\">=</span><span style=\"color: #98C379\"> tab</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">insert_final_newline</span><span style=\"color: #98C379\"> </span><span style=\"color: #ABB2BF\">=</span><span style=\"color: #98C379\"> true</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">trim_trailing_whitespace</span><span style=\"color: #98C379\"> </span><span style=\"color: #ABB2BF\">=</span><span style=\"color: #98C379\"> true</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #61AFEF\">[*.{md,yml}]</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">indent_style</span><span style=\"color: #98C379\"> </span><span style=\"color: #ABB2BF\">=</span><span style=\"color: #98C379\"> space</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">indent_size</span><span style=\"color: #98C379\"> </span><span style=\"color: #ABB2BF\">=</span><span style=\"color: #98C379\"> 2</span></span>\n<span class=\"line\"></span></code></pre>\n<blockquote>\n<p>需要注意 windows 和其它系统的换行符不同，为 crlf。</p>\n</blockquote>\n<h2>Q&amp;A</h2>\n<h3>为什么不使用 eslint 来检查代码风格？</h3>\n<ol>\n<li>要达到 Prettier 的格式化效果，需要配置维护大量的 eslint 规则，且存在不易实现的效果。\n<ol>\n<li>对于 vue 项目，你可以尝试使用 <code>@antfu/eslint-config</code></li>\n</ol>\n</li>\n<li>代码风格无关代码正确性，eslint 会飘很多红。lint 这个词对于代码风格来说太严格了。\n<ol>\n<li>虽然可以在保存时自动修复，但我受不了。</li>\n</ol>\n</li>\n</ol>\n<p>另外，推荐不要结合 eslint 使用 Prettier，vscode 明明有 lint 和 format 各自对应的设置项。</p>\n<h3>为何不配置 Prettier 的配置项和插件？</h3>\n<ol>\n<li>就默认的配置而言，去除分号后，代码已经足够美观</li>\n<li>就我折腾 Prettier 插件的体验来说，只要超过使用一个插件，就很大概率会出现插件冲突的问题\n<ol>\n<li>我尝试折腾过 <code>@ianvs/prettier-plugin-sort-imports</code> 插件来格式化 import 语句，但它无法处理全部的场景。</li>\n<li>我也用过 <code>prettier-plugin-tailwindcss</code> 来排序 tailwind 的 classname。 但是它和前者无法共同使用，还会和 <code>@egoist/tailwindcss-icons</code> 不相容。</li>\n</ol>\n</li>\n</ol>\n<h3>如何格式化 import 语句？</h3>\n<p>推荐使用 vscode 的设置项，它能实现对 import 进行排序，去除未使用的 import 等功能。</p>\n<pre class=\"pre-dark\" style=\"background:#fafafa\"><code><span class=\"line\"><span style=\"color: #ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">&quot;editor.codeActionsOnSave&quot;</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">&quot;source.organizeImports&quot;</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #D19A66\">true</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<h2>总结</h2>\n<p>总之，人生苦短，我懒得弄了。</p>\n<p>遇到的问题有的有办法规避或者解决，但是需要花时间去排查，我对此感到疲惫。\n所以，我不愿意再去追求完美的效果，可以手动处理这些场景。\n对于 Prettier 本体来说，开箱即用的体验挺好的。</p>\n<h2>相关链接</h2>\n<ol>\n<li><a href=\"https://antfu.me/posts/why-not-prettier\">Why I don't use Prettier</a></li>\n</ol>\n"}}]]}]
